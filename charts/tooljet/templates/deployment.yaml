apiVersion: apps/v1
kind: Deployment
metadata:
  name: tooljet
spec:
  selector:
    matchLabels:
      app: tooljet
  template:
    metadata:
      labels:
        app: tooljet
    spec:
      containers:
        - name: tooljet
          image: "{{ .Values.apps.tooljet.deployment.image.repository }}:{{ .Values.apps.tooljet.deployment.image.tag }}"
          imagePullPolicy: "{{ .Values.apps.tooljet.deployment.image.pullPolicy }}"
          args: ["npm", "run", "start:prod"]
          ports:
            - containerPort: 3000
          resources:
            limits:
              memory: {{ .Values.apps.tooljet.deployment.resources.limits.memory }}
              cpu: {{ .Values.apps.tooljet.deployment.resources.limits.cpu }}
            requests:
              memory: {{ .Values.apps.tooljet.deployment.resources.requests.memory }}
              cpu: {{ .Values.apps.tooljet.deployment.resources.requests.cpu }}
          readinessProbe:
            httpGet:
              port: 3000
              path: /api/health
            successThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 6
          env:
            - name: TOOLJET_HOST
              value: "{{ .Values.apps.tooljet.service.host }}"
            {{ if .Values.external_postgresql.enabled }}
            - name: PG_HOST
              value: "{{ .Values.external_postgresql.PG_HOST }}"
            - name: PG_USER
              value: "{{ .Values.external_postgresql.PG_USER }}"
            - name: PG_PASS
              value: "{{ .Values.external_postgresql.PG_PASS }}"
            - name: PG_PORT
              value: {{ .Values.external_postgresql.PG_PORT }}
            {{ else }}
            - name: PG_HOST
              value: "{{ .Release.Name }}-postgresql"
            {{- if .Values.postgresql.existingSecret }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: {{ default "password" .Values.postgresql.existingSecretKey }}
            {{- end }}
            {{- end }}

            - name: ENABLE_TOOLJET_DB
              value: {{ .Values.env.ENABLE_TOOLJET_DB }}

            - name: TOOLJET_DB
              value: {{ .Values.env.TOOLJET_DB }}

            {{ if .Values.tooljetdb_external_postgresql.enabled }}
            - name: TOOLJET_DB_HOST
              value: "{{ .Values.tooljetdb_external_postgresql.TOOLJET_DB_HOST }}"
            - name: TOOLJET_DB_PASS
              value: "{{ .Values.tooljetdb_external_postgresql.TOOLJET_DB_PASS }}"
            - name: TOOLJET_DB_USER
              value: "{{ .Values.tooljetdb_external_postgresql.TOOLJET_DB_USER }}"
            {{ else }}
            - name: TOOLJET_DB_HOST
              value: "{{ .Values.env.TOOLJET_DB_HOST }}"
            - name: TOOLJET_DB_USER
              value: "{{ .Values.env.TOOLJET_DB_USER }}"
            - name: TOOLJET_DB_PASS
              value: "{{ .Values.env.TOOLJET_DB_PASS }}"
            {{- end }}

            - name: PGRST_HOST
              value: "tooljet-postgrest-service"

            - name: PGRST_JWT_SECRET
              value: {{ .Values.env.jwt_secret }}

            - name: REDIS_HOST
              value: {{ .Values.enterprise.REDIS_HOST }}
            - name: REDIS_PORT
              value: {{ .Values.enterprise.REDIS_PORT }}
            - name: REDIS_USER
              value: {{ .Values.enterprise.REDIS_USER }}
            - name: REDIS_PASSWORD
              value: {{ .Values.enterprise.REDIS_PASSWORD }}
          envFrom:
            - secretRef:
                name: {{ .Values.apps.tooljet.secret.name }}
