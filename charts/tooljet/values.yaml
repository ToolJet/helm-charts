apps:
  tooljet:
    service:
      type: ClusterIP
      port: 3000
      host: "http://tooljet.localhost"
    deployment:
      image:
        repository: tooljet/tooljet
        pullPolicy: Always
        tag: EE-LTS-2.50.9.30
      resources:
        requests:
          memory: "3Gi"
          cpu: "2"
        limits:
          memory: "3Gi"
          cpu: "2"
    hpa:
      enabled: false
      min: 1
      max: 1
      threshhold:
        cpu: 1
        ram: 1500Mi
    secret:
      name: tooljet-server
      data:
        lockbox_key: "0123456789ABCDEF"
        secret_key_base: "0123456789ABCDEF"

tooljetservice:
  port: 80

ingress:
  enabled: false
  hostname: tooljet.localhost
  ingressClassName: 'nginx'
  annotations:
    kubernetes.io/ingress.class: "nginx"
  tls: []

postgresql:
  enabled: true
  auth:
    username: "postgres"
    postgresPassword: "postgres"
    database: "tooljet_production"
    existingSecret: ""

external_postgresql:
  enabled: false
  PG_HOST: ""
  PG_USER: ""
  PG_PASS: ""
  PG_PORT: "5432"
  PG_DB: ""
  existingSecret: ""

env:
  DEPLOYMENT_PLATFORM: "k8s:helm"
  PGRST_DB_URI: "postgres://postgres:postgres@tooljet-postgresql.default.svc.cluster.local:5432/tooljet_db"
  PGRST_JWT_SECRET: "779ce303294a7d84a2aea9ff1ef1912f9ac57220a0dd2c0861a11ca5ae6c5817"
  ENABLE_TOOLJET_DB: "true"
  TOOLJET_DB_USER: "postgres"
  TOOLJET_DB_HOST: "tooljet-postgresql"
  TOOLJET_DB_PASS: "postgres"
  TOOLJET_DB: "tooljet_db"
  PGRST_HOST: "tooljet-postgrest.default.svc.cluster.local"

tooljetdb_external_postgresql:
  enabled: false
  TOOLJET_DB_USER: ""
  TOOLJET_DB_HOST: ""
  TOOLJET_DB_PASS: ""
  TOOLJET_DB: ""
  PGRST_DB_URI: ""

redis:
  fullnameOverride: redis
  auth:
    enabled: true
    password: "tooljet"
  master:
    service:
      port: 6379

redis_pod:
  REDIS_HOST: "redis-master"
  REDIS_PORT: "6379"
  REDIS_USER: "default"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

postgrest:
  replicaCount: 1
  image:
    repository: postgrest/postgrest
    tag: v12.0.2
    pullPolicy: Always
  containerPort: 3000
  service:
    port: 80
    targetPort: 3000
    type: NodePort
  logLevel: info
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}